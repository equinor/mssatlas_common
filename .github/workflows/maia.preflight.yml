name: Callable - Prepare deployment (stop triggers etc.)

on:
  workflow_call:
    inputs:
      environment:
        description: 'The name of the environment.'
        default: '[MISSING]'
        required: true
        type: string
      subscriptionid:
        description: 'The subscription id of the source data factory'
        default: '[MISSING]'
        required: true
        type: string
      resourcegroup:
        description: 'The resource group of the source data factory.'
        default: '[MISSING]'
        required: true
        type: string
      datafactory_name:
        description: 'The name of the source data factory.'
        default: '[MISSING]'
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true

jobs:
  preflight:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}

    steps:
      - name: Download preflight artifact
        uses: actions/download-artifact@v2
        with:
          name: preflight-template
          path: ./preflight-files
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Print Powershell environment
        shell: pwsh
        run: |
          echo $PSVersionTable.PSVersion
          Get-Module
      - name: Install and cache PowerShell modules
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v4
        with:
          modules-to-cache: Az.Resources, Az.Network, Az.DataFactory
      - name: Connect-AzAccount
        shell: pwsh
        run: |
          $secureStringPassword = ConvertTo-SecureString ${{ secrets.ARM_CLIENT_SECRET }} -AsPlainText -Force
          $pscredential = New-Object -TypeName System.Management.Automation.PSCredential('${{ secrets.ARM_CLIENT_ID }}', $secureStringPassword)
          Connect-AzAccount -ServicePrincipal -Credential $pscredential -Tenant ${{ secrets.ARM_TENANT_ID }}
      - name: Run ADF Pre-flight script
        shell: pwsh
        run: | 
          ./preflight-files/adf-preflight.ps1 -SubscriptionId ${{inputs.subscriptionid}} -ResourceGroupName ${{inputs.resourcegroup}} -DataFactoryName ${{inputs.datafactory_name}}
