###############################################################
# This is a reusable workflow. The workflow is callable by 
# by workflows in other repos. This workflow deploys the aritfact
# content uploaded by maia.adf_build_artifact.yml.
###############################################################

name: Callable - Deploy Data Factory

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      environment:
        description: 'The name of the environment.'
        default: '[MISSING]'
        required: true
        type: string
      subscriptionid:
        description: 'The subscription id of the source data factory'
        default: '[MISSING]'
        required: true
        type: string
      resourcegroup:
        description: 'The resource group of the source data factory.'
        default: '[MISSING]'
        required: true
        type: string
      datafactory_name:
        description: 'The name of the source data factory.'
        default: '[MISSING]'
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true

jobs:  
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    steps:
      - name: Print inputs
        run: |
          echo "environment ${{inputs.environment}}"
          echo "subscriptionid ${{inputs.subscriptionid}}"
          echo "resourcegroup ${{inputs.resourcegroup}}"
          echo "datafactory_name ${{inputs.datafactory_name}}"

      - name: Download ARM Template from artifacts
        uses: actions/download-artifact@v2
        with:
          name: adf-arm-template
          path: ./template

      - name: Download global parameter artifact
        uses: actions/download-artifact@v2
        with:
          name: adf-parameters
          path: ./template

      - name: Download deployment artifact from public repo
        uses: actions/download-artifact@v2
        with:
          name: deploy-template
          path: ./deploy-files

      - name: Display structure of downloaded files
        working-directory: ./template
        run: ls -R

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Print Powershell environment
        shell: pwsh
        run: |
          echo $PSVersionTable.PSVersion
          Get-Module
      # - name: Install Powershell AZ modules
      #   shell: pwsh
      #   run: |
      #     Install-Module -Name Az.Resources -Repository PSGallery -Force
      #     Install-Module -Name Az.Network -Repository PSGallery -Force
      #     Install-Module -Name Az.DataFactory -Repository PSGallery -Force

      - name: Install and cache PowerShell modules
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v4
        with:
          modules-to-cache: Az.Resources, Az.Network, Az.DataFactory

      - name: OIDC Login to Azure Public Cloud with AzPowershell (enableAzPSSession true)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true  

      - name: Find and replace trigger lake referances
        shell: pwsh
        run: ./deploy-files/ReplaceTriggerReferances.ps1 -armTemplate ./template/ARMTemplateForFactory.json -globalParameters ./template/parameters/ADFGlobalParameters.${{inputs.environment}}.json
      - name: Validate ARM template
        run: | 
          az deployment group validate \
            --name ARMTemplateForFactory \
            --resource-group ${{ inputs.resourcegroup }} \
            --subscription ${{ inputs.subscriptionid }} \
            --template-file ./template/ARMTemplateForFactory.json \
            --parameters ./template/parameters/ADFParametersForFactory.${{inputs.environment}}.json
      - name: Predeployment script
        shell: pwsh
        run: ./deploy-files/CustomPrePostDeploymentScript.ps1 -armTemplate ./template/ARMTemplateForFactory.json -ResourceGroupName ${{ inputs.resourcegroup }} -DataFactoryName ${{inputs.datafactory_name}} -predeployment $true -deleteDeployment $false
      - name: Az Deploy ARM
        run: | 
          az deployment group create \
            --name ARMTemplateForFactory \
            --resource-group ${{ inputs.resourcegroup }} \
            --subscription ${{ inputs.subscriptionid }} \
            --template-file ./template/ARMTemplateForFactory.json \
            --parameters ./template/parameters/ADFParametersForFactory.${{inputs.environment}}.json
      - name: Update global parameters
        shell: pwsh
        run: ./template/GlobalParametersUpdateScript.ps1 -globalParametersFilePath ./template/parameters/ADFGlobalParameters.${{inputs.environment}}.json -resourceGroupName ${{inputs.resourcegroup}} -dataFactoryName ${{inputs.datafactory_name}}
      - name: Post deployment script
        shell: pwsh
        run: ./deploy-files/CustomPrePostDeploymentScript.ps1 -armTemplate ./template/ARMTemplateForFactory.json -ResourceGroupName ${{ inputs.resourcegroup }} -DataFactoryName ${{inputs.datafactory_name}} -predeployment $false -deleteDeployment $true