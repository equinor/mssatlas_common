###############################################################
# This is a reusable workflow. The workflow is callable by 
# by workflows in other repos. This workflow deploys the aritfact
# content uploaded by maia.adf_build_artifact.yml.
###############################################################

name: Callable - Deploy Data Factory Artifact

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      key_vault_name:
        description: 'The name of the key vault'
        default: '[MISSING]'
        required: true
        type: string
      environment:
        description: 'The name of the environment.'
        default: '[MISSING]'
        required: true
        type: string
      subscriptionid:
        description: 'The subscription id of the source data factory'
        default: '[MISSING]'
        required: true
        type: string
      resourcegroup:
        description: 'The resource group of the source data factory.'
        default: '[MISSING]'
        required: true
        type: string
      datafactory_name:
        description: 'The name of the source data factory.'
        default: '[MISSING]'
        required: true
        type: string
    secrets:
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      ARM_TENANT_ID:
        required: true

jobs:  
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    steps:
      - name: Print inputs
        run: |
          echo "key_vault_name ${{inputs.key_vault_name}}"
          echo "environment ${{inputs.environment}}"
          echo "subscriptionid ${{inputs.subscriptionid}}"
          echo "resourcegroup ${{inputs.resourcegroup}}"
          echo "datafactory_name ${{inputs.datafactory_name}}"

      - name: Download ARM Template from artifacts
        uses: actions/download-artifact@v2
        with:
          name: adf-arm-template
          path: ./template

      - name: Display structure of downloaded files
        working-directory: ./template
        run: ls -R
      - name: Azure login
        run: | 
          az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}
          az account set --subscription=${{ inputs.subscriptionid }}

      - name: Print Powershell environment
        shell: pwsh
        run: |
          echo $PSVersionTable.PSVersion
          Get-Module
      - name: Install Powershell AZ modules
        shell: pwsh
        run: |
          Install-Module -Name Az.Resources -Repository PSGallery -Force
          Install-Module -Name Az.Network -Repository PSGallery -Force
          Install-Module -Name Az.DataFactory -Repository PSGallery -Force

      - name: Connect-AzAccount
        shell: pwsh
        run: |
          $secureStringPassword = ConvertTo-SecureString ${{ secrets.ARM_CLIENT_SECRET }} -AsPlainText -Force
          $pscredential = New-Object -TypeName System.Management.Automation.PSCredential('${{ secrets.ARM_CLIENT_ID }}', $secureStringPassword)
          Connect-AzAccount -ServicePrincipal -Credential $pscredential -Tenant ${{ secrets.ARM_TENANT_ID }}

      - name: Find and replace trigger lake referances
        shell: pwsh
        run: ./template/ReplaceTriggerReferances.ps1 -armTemplate ./template/ARMTemplateForFactory.json -globalParameters ./template/parameters/ADFGlobalParameters.${{inputs.environment}}.json
      - name: Validate ARM template
        run: | 
          az deployment group validate \
            --name ARMTemplateForFactory \
            --resource-group ${{ inputs.resourcegroup }} \
            --subscription ${{ inputs.subscriptionid }} \
            --template-file ./template/ARMTemplateForFactory.json \
            --parameters ./template/parameters/ADFParametersForFactory.${{inputs.environment}}.json
      - name: Predeployment script
        shell: pwsh
        run: ./template/CustomPrePostDeploymentScript.ps1 -armTemplate ./template/ARMTemplateForFactory.json -ResourceGroupName ${{ inputs.resourcegroup }} -DataFactoryName ${{inputs.datafactory_name}} -predeployment $true -deleteDeployment $false
      - name: Az Deploy ARM
        run: | 
          az deployment group create \
            --name ARMTemplateForFactory \
            --resource-group ${{ inputs.resourcegroup }} \
            --subscription ${{ inputs.subscriptionid }} \
            --template-file ./template/ARMTemplateForFactory.json \
            --parameters ./template/parameters/ADFParametersForFactory.${{inputs.environment}}.json
      - name: Update global parameters
        shell: pwsh
        run: ./template/GlobalParametersUpdateScript.ps1 -globalParametersFilePath ./template/parameters/ADFGlobalParameters.${{inputs.environment}}.json -resourceGroupName ${{inputs.resourcegroup}} -dataFactoryName ${{inputs.datafactory_name}}
      - name: Post deployment script
        shell: pwsh
        run: ./template/CustomPrePostDeploymentScript.ps1 -armTemplate ./template/ARMTemplateForFactory.json -ResourceGroupName ${{ inputs.resourcegroup }} -DataFactoryName ${{inputs.datafactory_name}} -predeployment $false -deleteDeployment $true